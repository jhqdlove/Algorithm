/*
public String[] findWords(String[] words) {
    return Stream.of(words).filter(s -> s.toLowerCase().matches("[qwertyuiop]*|[asdfghjkl]*|[zxcvbnm]*")).toArray(String[]::new);
}
*/

class Solution {
    public String[] findWords(String[] words) {
        if(words.length==0) return words;
        int[] key = {2,3,3,2,1,2,2,//ABCDEFG
                     2,1,2,2,2,3,3,//HIGKLMN
                     1,1,1,1,2,1,//OPQRST
                     1,3,1,3,1,3//UVWXYZ
                    };
        
        List<String> result = new LinkedList<String>();
        for(int i=0;i<words.length;i++){
            if(words[i].length()==0) break;
            int flag = key[words[i].charAt(0)>='a'?words[i].charAt(0)-'a':words[i].charAt(0)-'A'];
            
            for(int j=1;j<words[i].length();j++){
                char X = words[i].charAt(j);
                int F = key[(X>='a'?X-'a':X-'A')];
                if(F!=flag) {flag=-1;break;}                
            }
            
            if(flag>0) result.add(words[i]);                  
        }
        
        String[] strings = new String[result.size()];
        result.toArray(strings);
        return strings;
    }
    
    
}
