/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    
    //while循环要记得参数更新:i++，before = before.right。
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        if(nums.length==0)return null;
        TreeNode root = new TreeNode(nums[0]);
        int i=1;
        while(i<nums.length){
            TreeNode temp = new TreeNode(nums[i]);
            if(nums[i]>root.val){
                temp.left = root;
                root = temp;
            }else{
                TreeNode before = root;
                while(before.right!=null){
                    if(before.right.val<nums[i]){
                        break;
                    }else{
                        before = before.right;
                    }
                }
                TreeNode next = before.right;
                before.right = temp;
                temp.left = next;
            }
            i++;
        }
        return root;
        
    }
    //存在O(N)解法。
}
